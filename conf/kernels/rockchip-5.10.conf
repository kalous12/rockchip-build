KERNEL_REPO=https://github.com/kalous12/linux-rockchip.git
KERNEL_BRANCH=jammy
KERNEL_VERSION=5.10.160
KERNEL_TAG=5.10.160-32
KERNEL_CLONE_DIR=linux-rockchip
KERNEL_DEFCONFIG=rockchip_linux_defconfig
DPKG_BUILDPACKAGE=y

function config_image_hook__rockchip-5.10() {
    # Realtek 8811CU/8821CU usb modeswitch support
    cp ${chroot_dir}/lib/udev/rules.d/40-usb_modeswitch.rules ${chroot_dir}/etc/udev/rules.d/40-usb_modeswitch.rules
    sed '/LABEL="modeswitch_rules_end"/d' -i ${chroot_dir}/etc/udev/rules.d/40-usb_modeswitch.rules
    echo '# Realtek 8811CU/8821CU Wifi AC USB' >> ${chroot_dir}/etc/udev/rules.d/40-usb_modeswitch.rules
    echo 'ATTR{idVendor}=="0bda", ATTR{idProduct}=="1a2b", RUN+="/usr/sbin/usb_modeswitch -K -v 0bda -p 1a2b"' >> ${chroot_dir}/etc/udev/rules.d/40-usb_modeswitch.rules
    echo 'LABEL="modeswitch_rules_end"' >> ${chroot_dir}/etc/udev/rules.d/40-usb_modeswitch.rules

    # Add usb modeswitch and realtek firmware to initrd this fixes a boot hang with 8811CU/8821CU
    cp ${overlay_dir}/usr/share/initramfs-tools/hooks/usb_modeswitch ${chroot_dir}/usr/share/initramfs-tools/hooks/usb_modeswitch
    cp ${overlay_dir}/usr/share/initramfs-tools/hooks/rtl-bt ${chroot_dir}/usr/share/initramfs-tools/hooks/rtl-bt

    if [ "${RELEASE}" == "jammy" ]; then
        # Pin and add rockchip ppa
        cp ${overlay_dir}/etc/apt/preferences.d/rockchip-ppa ${chroot_dir}/etc/apt/preferences.d/rockchip-ppa
        chroot ${chroot_dir} add-apt-repository -y ppa:jjriek/rockchip

        # Install rockchip firmware
        chroot ${chroot_dir} apt-get -y install rockchip-firmware

        if [ "${OVERLAY_PREFIX}" == "rk3588" ]; then
            # Pin and add rockchip multimedia ppa
            cp ${overlay_dir}/etc/apt/preferences.d/rockchip-multimedia-ppa ${chroot_dir}/etc/apt/preferences.d/rockchip-multimedia-ppa
            chroot ${chroot_dir} /bin/bash -c "add-apt-repository -y ppa:liujianfeng1994/rockchip-multimedia"

            # Pin and add panfork mesa ppa
            cp ${overlay_dir}/etc/apt/preferences.d/panfork-mesa-ppa ${chroot_dir}/etc/apt/preferences.d/panfork-mesa-ppa
            chroot ${chroot_dir} /bin/bash -c "add-apt-repository -y ppa:liujianfeng1994/panfork-mesa"

            # Download and update installed packages
            chroot ${chroot_dir} /bin/bash -c "apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade"

            # Set cpu governor to performance
            cp ${overlay_dir}/usr/lib/systemd/system/cpu-governor-performance.service ${chroot_dir}/usr/lib/systemd/system/cpu-governor-performance.service
            chroot ${chroot_dir} /bin/bash -c "systemctl enable cpu-governor-performance"

            # Set gpu governor to performance
            cp ${overlay_dir}/usr/lib/systemd/system/gpu-governor-performance.service ${chroot_dir}/usr/lib/systemd/system/gpu-governor-performance.service
            chroot ${chroot_dir} /bin/bash -c "systemctl enable gpu-governor-performance"

            if [[ "${PROJECT}" == "preinstalled-desktop" ]]; then
                # Install rkaiq and rkisp
                cp -r ../packages/rkaiq/camera_engine_*_arm64.deb ${chroot_dir}/tmp
                chroot ${chroot_dir} /bin/bash -c "dpkg -i /tmp/camera_engine_rkaiq_rk3588_1.0.3_arm64.deb"
                chroot ${chroot_dir} /bin/bash -c "dpkg -i /tmp/camera_engine_rkaiq_rk3588_update_arm64.deb"
                chroot ${chroot_dir} /bin/bash -c "dpkg -i /tmp/camera_engine_rkisp-v2.2.0_arm64.deb"
                rm -f ${chroot_dir}/tmp/camera_engine_*_arm64.deb

                # Hack for GDM to restart on first HDMI hotplug
                mkdir -p ${chroot_dir}/usr/lib/scripts
                cp ${overlay_dir}/usr/lib/scripts/gdm-hack.sh ${chroot_dir}/usr/lib/scripts/gdm-hack.sh
                cp ${overlay_dir}/etc/udev/rules.d/99-gdm-hack.rules ${chroot_dir}/etc/udev/rules.d/99-gdm-hack.rules

                chroot ${chroot_dir} /bin/bash -c "apt-get -y install libwidevinecdm librockchip-mpp1 librockchip-mpp-dev librockchip-vpu0 libv4l-rkmpp librist-dev librist4 librga2 librga-dev rist-tools rockchip-mpp-demos rockchip-multimedia-config gstreamer1.0-rockchip1 chromium-browser mali-g610-firmware malirun"

                # Chromium uses fixed paths for libv4l2.so
                chroot ${chroot_dir} /bin/bash -c "ln -rsf /usr/lib/*/libv4l2.so /usr/lib/"
                chroot ${chroot_dir} /bin/bash -c "[ -e /usr/lib/aarch64-linux-gnu/ ] && ln -Tsf lib /usr/lib64"

                # Config file for mpv
                cp ${overlay_dir}/etc/mpv/mpv.conf ${chroot_dir}/etc/mpv/mpv.conf

                # Use mpv as the default video player
                sed -i 's/org\.gnome\.Totem\.desktop/mpv\.desktop/g' ${chroot_dir}/usr/share/applications/gnome-mimeapps.list 

                # Config file for xorg
                mkdir -p ${chroot_dir}/etc/X11/xorg.conf.d
                cp ${overlay_dir}/etc/X11/xorg.conf.d/20-modesetting.conf ${chroot_dir}/etc/X11/xorg.conf.d/20-modesetting.conf

                # Set chromium inital prefrences
                mkdir -p ${chroot_dir}/usr/lib/chromium-browser
                cp ${overlay_dir}/usr/lib/chromium-browser/initial_preferences ${chroot_dir}/usr/lib/chromium-browser/initial_preferences

                # Set chromium default launch args
                mkdir -p ${chroot_dir}/usr/lib/chromium-browser
                cp ${overlay_dir}/etc/chromium-browser/default ${chroot_dir}/etc/chromium-browser/default

                # Set chromium as default browser
                chroot ${chroot_dir} /bin/bash -c "update-alternatives --install /usr/bin/x-www-browser x-www-browser /usr/bin/chromium-browser 500"
                chroot ${chroot_dir} /bin/bash -c "update-alternatives --set x-www-browser /usr/bin/chromium-browser"
                sed -i 's/firefox-esr\.desktop/chromium-browser\.desktop/g;s/firefox\.desktop;//g' ${chroot_dir}/usr/share/applications/gnome-mimeapps.list 

                # Add chromium to favorites bar
                mkdir -p ${chroot_dir}/etc/dconf/db/local.d
                cp ${overlay_dir}/etc/dconf/db/local.d/00-favorite-apps ${chroot_dir}/etc/dconf/db/local.d/00-favorite-apps
                cp ${overlay_dir}/etc/dconf/profile/user ${chroot_dir}/etc/dconf/profile/user
                chroot ${chroot_dir} /bin/bash -c "dconf update"
            fi
        fi
    fi

    return 0
}
